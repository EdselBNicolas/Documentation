{"html":"<!-- TITLE: Dynamic Theming --><!-- SUBTITLE: A quick summary of Dynamic Theming --><html><head></head><body><h1 id=\"create-theme-files\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#create-theme-files\" aria-hidden=\"true\"></a> Create theme files</h1>\n<p><em>Under src/themes folder</em></p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// Filename: theme.#{color}.scss or theme.dark.scss</span>\n\n.#{<span class=\"hljs-attribute\">color</span>}-theme { <span class=\"hljs-comment\">//theme.dark.scss, theme.red.scss, ....</span>\n    \n    <span class=\"hljs-comment\">//set variables. these variables will serve as value of every property</span>\n    <span class=\"hljs-variable\">$primary</span>: <span class=\"hljs-number\">#000</span>; <span class=\"hljs-comment\">//set the primary color;</span>\n    <span class=\"hljs-variable\">$font-color</span>: <span class=\"hljs-number\">#fff</span>; <span class=\"hljs-comment\">//set base color</span>\n    \n    <span class=\"hljs-comment\">//set styles, note: make css value dynamic, for able to adapt to another theme. Add variables/ styles if needed.</span>\n    ion-<span class=\"hljs-attribute\">content</span> {\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-variable\">$primary</span>;\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-variable\">$font-color</span>;\n  }\n \n  <span class=\"hljs-selector-class\">.toolbar-title</span> {\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-variable\">$font-color</span>;\n  }\n \n  <span class=\"hljs-selector-class\">.header</span> <span class=\"hljs-selector-class\">.toolbar-background</span> {\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-variable\">$primary</span>;\n  }\n}  \n</code></pre>\n<p><em>Import scss file on variables.scss</em></p>\n<pre class=\"hljs\"><code>@<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;theme.light&quot;</span>;\n@<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;theme.dark&quot;</span>;\n</code></pre>\n<h1 id=\"create-settings-provider\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#create-settings-provider\" aria-hidden=\"true\"></a> Create settings provider</h1>\n<p><em>open your src/providers/settings/settings.ts and insert</em></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">import</span> { Injectable } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;@angular/core&apos;</span>;\n<span class=\"hljs-keyword\">import</span> { BehaviorSubject } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;rxjs/Rx&apos;</span>;\n \n<span class=\"hljs-meta\">@Injectable</span>()\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> SettingsProvider {\n \n    <span class=\"hljs-keyword\">private</span> theme: BehaviorSubject&lt;<span class=\"hljs-built_in\">String</span>&gt;;\n \n    <span class=\"hljs-keyword\">constructor</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">this</span>.theme = <span class=\"hljs-keyword\">new</span> BehaviorSubject(<span class=\"hljs-string\">&apos;light-theme&apos;</span>);\n    }\n \n    setActiveTheme(val) {\n        <span class=\"hljs-keyword\">this</span>.theme.next(val);\n    }\n \n    getActiveTheme() {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.theme.asObservable();\n    }\n}\n</code></pre>\n<h1 id=\"page-that-trigger-the-theme\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#page-that-trigger-the-theme\" aria-hidden=\"true\"></a> Page that trigger the theme</h1>\n<p><em>page.ts</em></p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">//import settings</span>\n<span class=\"hljs-keyword\">import</span> { SettingsProvider } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;./../../providers/settings&apos;</span>;\n\n<span class=\"hljs-comment\">//declare a variable</span>\nselectedTheme: <span class=\"hljs-built_in\">String</span>;\n\n<span class=\"hljs-comment\">//on the constructor</span>\n<span class=\"hljs-keyword\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">public</span> navCtrl: NavController, <span class=\"hljs-keyword\">private</span> settings: SettingsProvider</span>) {\n    <span class=\"hljs-keyword\">this</span>.settings.getActiveTheme().subscribe(<span class=\"hljs-function\"><span class=\"hljs-params\">val</span> =&gt;</span> <span class=\"hljs-keyword\">this</span>.selectedTheme = val);\n}\n\n<span class=\"hljs-comment\">//create function toggleAppTheme()</span>\ntoggleAppTheme(theme) {\n    <span class=\"hljs-keyword\">this</span>.settings.setActiveTheme(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${theme}</span>-theme`</span>);\n}\n\n<span class=\"hljs-comment\">//whole code</span>\n<span class=\"hljs-keyword\">import</span> { Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;@angular/core&apos;</span>;\n<span class=\"hljs-keyword\">import</span> { IonicPage, NavController, NavParams } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;ionic-angular&apos;</span>;\n<span class=\"hljs-keyword\">import</span> { SettingsProvider } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;./../../providers/settings&apos;</span>;\n<span class=\"hljs-comment\">/**\n * Generated class for the ThemingPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */</span>\n\n<span class=\"hljs-meta\">@IonicPage</span>()\n<span class=\"hljs-meta\">@Component</span>({\n  selector: <span class=\"hljs-string\">&apos;page-theming&apos;</span>,\n  templateUrl: <span class=\"hljs-string\">&apos;theming.html&apos;</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> ThemingPage {\n  selectedTheme: <span class=\"hljs-built_in\">String</span>;\n\n  <span class=\"hljs-keyword\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">public</span> navCtrl: NavController, <span class=\"hljs-keyword\">public</span> navParams: NavParams, <span class=\"hljs-keyword\">private</span> settings: SettingsProvider</span>) {\n    <span class=\"hljs-keyword\">this</span>.settings.getActiveTheme().subscribe(<span class=\"hljs-function\"><span class=\"hljs-params\">val</span> =&gt;</span> <span class=\"hljs-keyword\">this</span>.selectedTheme = val);\n  }\n\n  ionViewDidLoad() {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;ionViewDidLoad ThemingPage&apos;</span>);\n  }\n\n  toggleAppTheme(theme) {\n    <span class=\"hljs-comment\">// alert(`${theme}-theme`);  </span>\n    <span class=\"hljs-keyword\">this</span>.settings.setActiveTheme(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${theme}</span>-theme`</span>);\n  }\n\n}\n\n  \n</code></pre>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ion-button</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;dark&quot;</span> (<span class=\"hljs-attr\">click</span>)=<span class=\"hljs-string\">&quot;toggleAppTheme(&apos;dark&apos;)&quot;</span>&gt;</span>Dark<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ion-button</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;light&quot;</span> (<span class=\"hljs-attr\">click</span>)=<span class=\"hljs-string\">&quot;toggleAppTheme(&apos;light&apos;)&quot;</span>&gt;</span>Light<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ion-button</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;blue&quot;</span> (<span class=\"hljs-attr\">click</span>)=<span class=\"hljs-string\">&quot;toggleAppTheme(&apos;blue&apos;)&quot;</span>&gt;</span>Blue<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ion-button</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;red&quot;</span> (<span class=\"hljs-attr\">click</span>)=<span class=\"hljs-string\">&quot;toggleAppTheme(&apos;red&apos;)&quot;</span>&gt;</span>Red<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ion-button</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;green&quot;</span> (<span class=\"hljs-attr\">click</span>)=<span class=\"hljs-string\">&quot;toggleAppTheme(&apos;green&apos;)&quot;</span>&gt;</span>Green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ion-button</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;pink&quot;</span> (<span class=\"hljs-attr\">click</span>)=<span class=\"hljs-string\">&quot;toggleAppTheme(&apos;pink&apos;)&quot;</span>&gt;</span>Pink<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ion-button</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;violet&quot;</span> (<span class=\"hljs-attr\">click</span>)=<span class=\"hljs-string\">&quot;toggleAppTheme(&apos;violet&apos;)&quot;</span>&gt;</span>Violet<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</code></pre>\n<h1 id=\"last-step\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#last-step\" aria-hidden=\"true\"></a> last step</h1>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">import</span> { SettingsProvider } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;./../providers/settings/settings&apos;</span>;\n<span class=\"hljs-keyword\">import</span> { Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;@angular/core&apos;</span>;\n<span class=\"hljs-keyword\">import</span> { Platform } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;ionic-angular&apos;</span>;\n<span class=\"hljs-keyword\">import</span> { StatusBar } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;@ionic-native/status-bar&apos;</span>;\n<span class=\"hljs-keyword\">import</span> { SplashScreen } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;@ionic-native/splash-screen&apos;</span>;\n \n<span class=\"hljs-keyword\">import</span> { HomePage } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;../pages/home/home&apos;</span>;\n<span class=\"hljs-meta\">@Component</span>({\n  templateUrl: <span class=\"hljs-string\">&apos;app.html&apos;</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> MyApp {\n  rootPage:<span class=\"hljs-built_in\">any</span> = HomePage;\n  selectedTheme: <span class=\"hljs-built_in\">String</span>;\n  \n  <span class=\"hljs-keyword\">constructor</span>(<span class=\"hljs-params\">platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, <span class=\"hljs-keyword\">private</span> settings: SettingsProvider</span>) {\n    <span class=\"hljs-keyword\">this</span>.settings.getActiveTheme().subscribe(<span class=\"hljs-function\"><span class=\"hljs-params\">val</span> =&gt;</span> <span class=\"hljs-keyword\">this</span>.selectedTheme = val);\n \n    platform.ready().then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n</code></pre>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ion-nav</span> [<span class=\"hljs-attr\">root</span>]=<span class=\"hljs-string\">&quot;rootPage&quot;</span> [<span class=\"hljs-attr\">class</span>]=<span class=\"hljs-string\">&quot;selectedTheme&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ion-nav</span>&gt;</span>\n</code></pre>\n<h1 id=\"reference\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#reference\" aria-hidden=\"true\"></a> reference</h1>\n<p><a href=\"https://devdactic.com/dynamic-theming-ionic/\" class=\"external-link\">https://devdactic.com/dynamic-theming-ionic/</a></p>\n</body></html>","meta":{"title":"Dynamic Theming","subtitle":"A quick summary of Dynamic Theming","path":"dynamic-theming"},"tree":[{"content":"Create theme files","anchor":"create-theme-files","nodes":[]},{"content":"Create settings provider","anchor":"create-settings-provider","nodes":[]},{"content":"Page that trigger the theme","anchor":"page-that-trigger-the-theme","nodes":[]},{"content":"last step","anchor":"last-step","nodes":[]},{"content":"reference","anchor":"reference","nodes":[]}],"parent":false}