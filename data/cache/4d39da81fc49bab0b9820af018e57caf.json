{"html":"<!-- TITLE: Pluralizer --><!-- SUBTITLE: A quick summary of Pluralizer --><html><head></head><body><p>This provider is use for the angular I18nPluralPipe (reference site: <a href=\"https://angular.io/api/common/I18nPluralPipe\" class=\"external-link\">https://angular.io/api/common/I18nPluralPipe</a>) that returns an object with a set of conditions base on the length of an array or number.</p>\n<h1 id=\"basic-usage\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#basic-usage\" aria-hidden=\"true\"></a> Basic Usage</h1>\n<p>generate provider  <code>ionic g provider pluralizer</code></p>\n<h3 id=\"pluralizer-ts\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#pluralizer-ts\" aria-hidden=\"true\"></a> pluralizer.ts</h3><div class=\"indent-h3\"><pre class=\"hljs\"><code><span class=\"hljs-keyword\">import</span> { Injectable } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;../exports/angular.exporter&apos;</span>;\n\n<span class=\"hljs-string\">`@Injectable()\nexport class PluralizerProvider {\n\n  setPluralForm(ifZero, ifOne, ifTwoMore) {\n    return { &apos;=0&apos;: ifZero, &apos;=1&apos;: ifOne, &apos;other&apos;: ifTwoMore }\n  }\n\n}`</span>\n</code></pre></div>\n\n<h2 id=\"provider-implementation\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#provider-implementation\" aria-hidden=\"true\"></a> Provider Implementation</h2><div class=\"indent-h2\"><h3 id=\"pluralizer-test-ts\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#pluralizer-test-ts\" aria-hidden=\"true\"></a> pluralizer-test.ts</h3><div class=\"indent-h3\"><pre class=\"hljs\"><code><span class=\"hljs-keyword\">import</span> { PluralizerProvider } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;../../../exports/provider.exporter&apos;</span>;\n\n<span class=\"hljs-meta\">@IonicPage</span>()\n<span class=\"hljs-meta\">@Component</span>({\n  selector: <span class=\"hljs-string\">&apos;page-pluralize-provider-test&apos;</span>,\n  templateUrl: <span class=\"hljs-string\">&apos;pluralize-provider-test.html&apos;</span>,\n  providers: [ PluralizerProvider]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> PluralizeProviderTestPage {\n\n  messages: <span class=\"hljs-built_in\">any</span> = [<span class=\"hljs-string\">&apos;Message 1&apos;</span>, <span class=\"hljs-string\">&apos;Message 2&apos;</span>, <span class=\"hljs-string\">&apos;Message 3&apos;</span>, <span class=\"hljs-string\">&apos;Message 4&apos;</span>];\n\n  <span class=\"hljs-keyword\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> pluralizerProvider: PluralizerProvider</span>) { }\n\n  pluralizerForMessages() { <span class=\"hljs-comment\">// set conditional messages based on array length/numbers</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.pluralizerProvider.setPluralForm(<span class=\"hljs-string\">&apos;# Messages&apos;</span>, <span class=\"hljs-string\">&apos;# Message&apos;</span>, <span class=\"hljs-string\">&apos;# Messages&apos;</span>)\n  }\n\n</code></pre></div><h3 id=\"pluralizer-test-html\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#pluralizer-test-html\" aria-hidden=\"true\"></a> pluralizer-test.html</h3><div class=\"indent-h3\"><pre class=\"hljs\"><code><span class=\"hljs-string\">`&lt;p text-center&gt;{{ messages.length | i18nPlural: pluralizerForMessages() }}&lt;/p&gt;`</span>\n</code></pre></div></div>\n\n\n\n\n</body></html>","meta":{"title":"Pluralizer","subtitle":"A quick summary of Pluralizer","path":"providers/pluralizer"},"tree":[{"content":"Basic Usage","anchor":"basic-usage","nodes":[{"content":"Provider Implementation","anchor":"provider-implementation","nodes":[]}]}],"parent":{"path":"providers","title":"Providers","subtitle":"A quick summary of Providers"}}