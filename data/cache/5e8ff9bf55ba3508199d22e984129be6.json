{"html":"<!-- TITLE: Good And Bad Coding --><!-- SUBTITLE: Guide for good and bad coding --><html><head></head><body><h1 id=\"attribute-property-proper-binding\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#attribute-property-proper-binding\" aria-hidden=\"true\"></a> Attribute / Property proper binding</h1>\n<pre class=\"hljs\"><code>//Bad\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&#x201D;{{imagePath}}&#x201D;</span>&gt;</span>\n\n\n//Bad\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> [<span class=\"hljs-attr\">src</span>]=<span class=\"hljs-string\">imagePath</span>&gt;</span>\n\n\n// Good\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> [<span class=\"hljs-attr\">src</span>]=<span class=\"hljs-string\">&#x201D;imagePath&#x201D;</span>  [<span class=\"hljs-attr\">disabled</span>]=<span class=\"hljs-string\">&#x201D;&#x201D;</span>&gt;</span>\n</code></pre>\n<h1 id=\"line-optimization\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#line-optimization\" aria-hidden=\"true\"></a> Line Optimization</h1>\n<pre class=\"hljs\"><code>  <span class=\"hljs-comment\">// Bad </span>\n    If (<span class=\"hljs-keyword\">this</span>.value == <span class=\"hljs-number\">1</span>) {  \n       <span class=\"hljs-keyword\">this</span>.dosomething()\n  } <span class=\"hljs-keyword\">else</span> {\n          \t <span class=\"hljs-keyword\">this</span>.doDiffThing()\n       }\n       \n    <span class=\"hljs-comment\">// Good</span>\n    If (<span class=\"hljs-keyword\">this</span>.value == <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">this</span>.dosomething()\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">this</span>.doDiffThing()\n    \n    \n    \n    <span class=\"hljs-comment\">// Bad </span>\n    .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">response</span>) =&gt;</span> {\n        <span class=\"hljs-built_in\">console</span>.log(response)\n })\n\n    <span class=\"hljs-comment\">// Good</span>\n    .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">response</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(response))\n\n\n</code></pre>\n<h1 id=\"conditions\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#conditions\" aria-hidden=\"true\"></a> Conditions</h1>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// Bad </span>\n    &lt;div *ngIF=&#x201D;task.done ==  <span class=\"hljs-literal\">false</span>&#x201D; &gt;\n\n<span class=\"hljs-comment\">// Good </span>\n    &lt;div *ngIF=&#x201D;!task.done&#x201D; &gt;\n\n\n\n<span class=\"hljs-comment\">// Bad </span>\n    &lt;div *ngIF=&#x201D;task.done ==  <span class=\"hljs-literal\">true</span>&#x201D; &gt;\n\n<span class=\"hljs-comment\">// Good </span>\n    &lt;div *ngIF=&#x201D;task.done&#x201D; &gt;\n\n</code></pre>\n</body></html>","meta":{"title":"Good And Bad Coding","subtitle":"Guide for good and bad coding","path":"sample"},"tree":[{"content":"Attribute / Property proper binding","anchor":"attribute-property-proper-binding","nodes":[]},{"content":"Line Optimization","anchor":"line-optimization","nodes":[]},{"content":"Conditions","anchor":"conditions","nodes":[]}],"parent":false}